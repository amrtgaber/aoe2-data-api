// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  @@map("users")
}

model Civ {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  civName String @unique

  units     Unit[]
  techs     Tech[]
  buildings Building[]

  @@map("civs")
}

model Unit {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  unitName String @unique

  age   Age? @relation(fields: [ageId], references: [id])
  ageId Int?

  civs      Civ[]
  buildings Building[]

  @@map("units")
}

model Tech {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  techName String @unique

  age   Age? @relation(fields: [ageId], references: [id])
  ageId Int?

  civs      Civ[]
  buildings Building[]

  @@map("techs")
}

model Building {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  buildingName String @unique

  age   Age? @relation(fields: [ageId], references: [id])
  ageId Int?

  civs  Civ[]
  units Unit[]
  techs Tech[]

  @@map("buildings")
}

model Age {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  ageName String @unique

  units     Unit[]
  techs     Tech[]
  buildings Building[]

  @@map("ages")
}
